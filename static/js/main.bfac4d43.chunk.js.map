{"version":3,"sources":["MovieCard.js","MovieList.js","App.js","serviceWorker.js","index.js"],"names":["MovieCard","rating","this","props","className","title","year","Component","MovieList","state","MoviesJSX","map","currentMovie","i","key","movieTitle","movieYear","movieRating","App","handleChange","e","setState","searchKeyword","target","value","starFilter","searchStars","search","myFilteredArray","movies","filter","myMovie","toLowerCase","indexOf","filterOn","filtredtable","resetFilter","handleChangeAdd","name","add","addMovieTitle","addMovieYear","parseInt","addMovieRating","display","console","log","type","placeholder","onChange","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bfac4d43.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass MovieCard extends Component {\r\n    render() { \r\n        let movierate=this.props.rating,rating=''\r\n        switch (movierate){\r\n            case 1:\r\n                rating=<span className='movie-stars'><i className=\"fas fa-star\"></i><i className=\"far fa-star\"></i><i className=\"far fa-star\"></i><i className=\"far fa-star\"></i><i className=\"far fa-star\"></i></span>;break;\r\n            case 2:\r\n                rating=<span className='movie-stars'><i className=\"fas fa-star\"></i><i className=\"fas fa-star\"></i><i className=\"far fa-star\"></i><i className=\"far fa-star\"></i><i className=\"far fa-star\"></i></span>;break;\r\n            case 3:\r\n                rating=<span className='movie-stars'><i className=\"fas fa-star\"></i><i className=\"fas fa-star\"></i><i className=\"fas fa-star\"></i><i className=\"far fa-star\"></i><i className=\"far fa-star\"></i></span>;break;\r\n            case 4:\r\n                rating=<span className='movie-stars'><i className=\"fas fa-star\"></i><i className=\"fas fa-star\"></i><i className=\"fas fa-star\"></i><i className=\"fas fa-star\"></i><i className=\"far fa-star\"></i></span>;break;\r\n            case 5:\r\n                rating=<span className='movie-stars'><i className=\"fas fa-star\"></i><i className=\"fas fa-star\"></i><i className=\"fas fa-star\"></i><i className=\"fas fa-star\"></i><i className=\"fas fa-star\"></i></span>;break;\r\n            default:\r\n                rating=<span className='movie-stars'><i className=\"far fa-star\"></i><i className=\"far fa-star\"></i><i className=\"far fa-star\"></i><i className=\"far fa-star\"></i><i className=\"far fa-star\"></i></span>\r\n        }\r\n        return ( \r\n            <div className=\"movie-item\">\r\n                <div className=\"movie-rating\">\r\n                    {rating}\r\n                </div>\r\n                <div className=\"movie-footer\">\r\n                    <span className=\"movie-title\">{this.props.title}</span>\r\n                    <span> - </span>\r\n                    <span className=\"movie-year\">{this.props.year}</span>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\nexport default MovieCard;","import React, { Component } from 'react';\r\nimport MovieCard from './MovieCard'\r\nclass MovieList extends Component {\r\n    state = {  }\r\n    render() {\r\n        const movies =this.props.MovieList\r\n        let MoviesJSX=[];\r\n        MoviesJSX =  movies.map((currentMovie,i) =>\r\n                    <MovieCard key={i} title={currentMovie.movieTitle} year={currentMovie.movieYear} rating={currentMovie.movieRating}/>\r\n                ) \r\n        return ( <div className=\"movie-container\">\r\n            {MoviesJSX}\r\n        </div>\r\n         );\r\n    }\r\n}\r\nexport default MovieList;","import React, { Component } from 'react';\nimport MovieList from './MovieList';\nimport './App.css';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n    searchKeyword:'',\n    addMovieTitle:'',\n    addMovieYear:'',\n    addMovieRating:'',\n    display:false,\n    searchStars:5,\n    filterOn:false,\n    movies:[\n      {\n          movieTitle:\"Inception\",\n          movieYear: 2010,\n          movieRating: 5\n      },\n      {\n        movieTitle:\"Titanic\",\n        movieYear: 1997,\n        movieRating: 2  \n      },\n      {\n        movieTitle:\"Blade Runner\",\n        movieYear: 2017,\n        movieRating: 4   \n      }\n    ]\n   }\n  }\n  handleChange =(e)=>{\n    this.setState({\n      searchKeyword:e.target.value\n    })\n  }\n  starFilter=(e)=>{\n    this.setState({\n      searchStars:e\n    })\n  }\n  search=()=>{\n   // if ( var n = str.indexOf(this.state.searchKeyword)\n   \n   const myFilteredArray = this.state.movies.filter(myMovie =>(myMovie.movieTitle.toLowerCase().indexOf(this.state.searchKeyword.toLowerCase())>=0)&&myMovie.movieRating>=this.state.searchStars);\n   this.setState({\n     filterOn:true,\n     filtredtable:myFilteredArray\n   })\n  }\n  resetFilter=()=>{\n    this.setState({\n      filterOn:false\n    })\n  }\n  handleChangeAdd = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  add=()=> {\n    this.setState ({\n      movies : [...this.state.movies,{movieTitle:this.state.addMovieTitle , movieYear:this.state.addMovieYear , movieRating:parseInt(this.state.addMovieRating)}], \n      display : !this.state.display\n     \n    })\n  }\n  render() {\n    return ( \n      <div className=\"App\">\n        {console.log(this.state.movies)}\n        <div className=\"search-form\">\n          <input type=\"text\" placeholder=\"Type movie name to search\" onChange={(e)=>this.handleChange(e)}/>\n          <span onClick={()=>this.search()} className=\"search-me\">Search</span>\n          <div>\n            <span>Minumum rating</span>\n            <span className='movie-stars'><i className=\"far fa-star\" onClick={()=>this.starFilter(1)}></i><i className=\"far fa-star\" onClick={()=>this.starFilter(2)}></i><i className=\"far fa-star\"onClick={()=>this.starFilter(3)}></i><i className=\"far fa-star\" onClick={()=>this.starFilter(4)}></i><i className=\"far fa-star\" onClick={()=>this.starFilter(5)}></i></span>\n          </div>\n          <div onClick={this.resetFilter}><span className=\"reset-me\">reset</span></div>\n        </div>\n        <MovieList MovieList={!this.state.filterOn?this.state.movies:this.state.filtredtable}/>\n        <div className=\"btn-plus-container\">\n          <div className=\"btn-div\" onClick ={()=>this.setState({display:!this.state.display})}>\n            <p>+</p>\n          </div>\n        </div>\n      \n      <div className ={this.state.display ? \"display\":\"hidden\"}>\n        <div className=\"display-container\">\n          <h2>Add a movie:</h2>\n        <input type=\"text\" placeholder=\"name\" name=\"addMovieTitle\" onChange={this.handleChangeAdd} />\n        <input type=\"text\" placeholder=\"year\" name=\"addMovieYear\" onChange={this.handleChangeAdd} />\n        <input type=\"text\" placeholder=\"rating\" name=\"addMovieRating\" onChange={this.handleChangeAdd} />\n        <button onClick={this.add}>Add</button>\n        </div>\n      </div>\n      </div>\n     );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}